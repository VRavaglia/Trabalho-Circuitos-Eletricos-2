8c8
< 50d46
---
> 50,52c47
10,11c10,11
< 55c51
< <   double valor, previousVC;			/*tensao/corrente anterior*/
---
> < #define NUMINTER 20
> < /*#define DEBUG*/
12a13,19
> > #define DEBUG
> 55,57c50,52
> < 	char nome[MAX_NOME];
> < 	double valor, previousVC;			/*tensao/corrente anterior*/
> < 	int a,b,c,d,x,y;
> ---
> >   char nome[MAX_NOME];
14c21,27
< 59d54
---
> >   int a,b,c,d,x,y;
> 60,65d54
> < typedef struct listCell{
> < 	int elNE;					/*guarda o numero do elemente variante no tempo*/
> < 	struct listCell *next;
> < } listCell;
> < 
16c29
< 68,69d62
---
> 74,75d62
19c32
< 79d71
---
> 85d71
21c34
< 83,85c75,76
---
> 89,91c75,76
28c41,45
< 151c142
---
> 157,161c142
> < 	int iTemp=0;											/*guarda o numero de interacoes no tempo*/
> < 	listCell *first;
> < 	first=(listCell *) NULL;
> < 
32c49
< 200,206d190
---
> 210,227d190
34a52,62
> < 		listCell *cur;
> < 		cur = (listCell *) malloc(sizeof(listCell));
> < 		(*cur).elNE=ne;
> < 		(*cur).next= (listCell *) NULL;
> < 		if (!first) first=cur;
> < 		else{
> < 			listCell *aux;
> < 			aux=first;
> < 			while((*aux).next) aux=(*aux).next;
> < 			(*aux).next=cur;
> < 		}
36c64
< <       printf("%s %s %s %g %g\n",netlist[ne].nome,na,nb,netlist[ne].valor,netlist[ne].previousVC);
---
> < 		printf("%s %s %s %g %g\n",netlist[ne].nome,na,nb,netlist[ne].valor,netlist[ne].previousVC);
40c68
< 230c214
---
> 251c214
44c72
< 264,268d247
---
> 285,289d247
50c78
< 275c254
---
> 296c254
54,55c82,86
< 292,305c271,277
< <     if (tipo=='R',tipo=='C') {
---
> 305,306d262
> < 
> < 	buildSys:
> 315,328c271,277
> <     if (tipo=='R' || tipo=='C') {
65c96
< < 			g=netlist[i].previousVC/g;
---
> < 			g=-(netlist[i].previousVC/g);	/*verificar*/
77c108
< 315,317c287,288
---
> 338,340c287,288
84c115
< 319c290
---
> 342c290
88c119
< 324,330c295
---
> 347,353c295
93,94c124,125
< < 			Yn[netlist[i].x][nv+1]=g;
< < 			Yn[netlist[i].x][netlist[i].x]=g*netlist[i].previousVC;
---
> < 			Yn[netlist[i].x][netlist[i].x]+=g;
> < 			Yn[netlist[i].x][nv+1]+=g*netlist[i].previousVC;	/*verificar*/
98c129,160
< 405a371
---
> 420,423c362
> < 	if (needBE)
> < 		printf("\nSolucao(#%i):\n", ++iTemp);
> < 	else
> < 		printf("\nSolucao:\n");
> ---
> >   printf("Solucao:\n");
> 430,452d368
> < 	if (needBE)
> < 		if (iTemp<NUMINTER){
> < 			listCell *cur;
> < 			cur=first;
> < 			while (cur){
> < 				if (netlist[(*cur).elNE].nome[0]=='C')
> < 					netlist[(*cur).elNE].previousVC=Yn[netlist[(*cur).elNE].a][nv+1]-Yn[netlist[(*cur).elNE].b][nv+1];
> < 				else
> < 					netlist[(*cur).elNE].previousVC=Yn[netlist[(*cur).elNE].x][nv+1];
> < 				cur=(*cur).next;
> < 			}
> < 			goto buildSys;
> < 		}
> < 		else
> < 		{
> < 			listCell *cur,*aux;
> < 			cur=first;
> < 			while(cur){
> < 				aux=(*cur).next;
> < 				free(cur);
> < 				cur=aux;
> < 			}
> < 		}
> 454a371
