37,40c37
< 
< /*#include <conio.h>*/
< #include <ncurses.h>
< 
---
> #include <conio.h>
50,52c47
< #define STDDETAT 0.1
< #define NUMINTER 20
< /*#define DEBUG*/
---
> #define DEBUG
55,57c50,52
< 	char nome[MAX_NOME];
< 	double valor, previousVC;			/*tensao/corrente anterior*/
< 	int a,b,c,d,x,y;
---
>   char nome[MAX_NOME];
>   double valor;
>   int a,b,c,d,x,y;
60,65d54
< typedef struct listCell{
< 	int elNE;					/*guarda o numero do elemente variante no tempo*/
< 	struct listCell *next;
< } listCell;
< 
< typedef enum boolean {falso=0, verdadeiro} boolean;
74,75d62
< boolean needBE=falso;
< 
85d71
< 
89,91c75,76
< 	deltaT=STDDETAT,
< 	g,
< 	Yn[MAX_NOS+1][MAX_NOS+2];
---
>   g,
>   Yn[MAX_NOS+1][MAX_NOS+2];
157,161c142
< 	int iTemp=0;											/*guarda o numero de interacoes no tempo*/
< 	listCell *first;
< 	first=(listCell *) NULL;
< 
<   /*clrscr();*/system("cls");
---
>   clrscr();
210,227d190
< 	else if (tipo=='C' || tipo=='L'){
< 		if (!needBE) needBE=verdadeiro;
< 		listCell *cur;
< 		cur = (listCell *) malloc(sizeof(listCell));
< 		(*cur).elNE=ne;
< 		(*cur).next= (listCell *) NULL;
< 		if (!first) first=cur;
< 		else{
< 			listCell *aux;
< 			aux=first;
< 			while((*aux).next) aux=(*aux).next;
< 			(*aux).next=cur;
< 		}
< 		sscanf(p,"%10s%10s%lg%lg",na,nb,&netlist[ne].valor,&netlist[ne].previousVC);
< 		printf("%s %s %s %g %g\n",netlist[ne].nome,na,nb,netlist[ne].valor,netlist[ne].previousVC);
< 		netlist[ne].a=numero(na);
< 		netlist[ne].b=numero(nb);
< 	}
251c214
<     if (tipo=='V' || tipo=='E' || tipo=='F' || tipo=='O' || tipo=='L') {
---
>     if (tipo=='V' || tipo=='E' || tipo=='F' || tipo=='O') {
285,289d247
< 
< 	else if (tipo=='C' || tipo=='L'){ 
< 	printf("%s %d %d %g %g\n",netlist[ne].nome,netlist[i].a,netlist[i].b,
< 	netlist[i].valor,netlist[i].previousVC);
< 	}
296c254
<     if (tipo=='V' || tipo=='E' || tipo=='F' || tipo=='O' || tipo=='L')
---
>     if (tipo=='V' || tipo=='E' || tipo=='F' || tipo=='O')
305,306d262
< 
< 	buildSys:
315,328c271,277
<     if (tipo=='R' || tipo=='C') {
< 		if (tipo=='R')
< 			g=1/netlist[i].valor;
< 		else
< 			g=deltaT/netlist[i].valor;
< 		Yn[netlist[i].a][netlist[i].a]+=g;
< 		Yn[netlist[i].b][netlist[i].b]+=g;
< 		Yn[netlist[i].a][netlist[i].b]-=g;
< 		Yn[netlist[i].b][netlist[i].a]-=g;
< 		if (tipo=='C'){
< 			g=-(netlist[i].previousVC/g);	/*verificar*/
< 	 		goto insertCur;
< 		}
< 	}
---
>     if (tipo=='R') {
>       g=1/netlist[i].valor;
>       Yn[netlist[i].a][netlist[i].a]+=g;
>       Yn[netlist[i].b][netlist[i].b]+=g;
>       Yn[netlist[i].a][netlist[i].b]-=g;
>       Yn[netlist[i].b][netlist[i].a]-=g;
>     }
338,340c287,288
< 		insertCur:
< 			Yn[netlist[i].a][nv+1]-=g;
< 			Yn[netlist[i].b][nv+1]+=g;
---
>       Yn[netlist[i].a][nv+1]-=g;
>       Yn[netlist[i].b][nv+1]+=g;
342c290
<     else if (tipo=='V' || tipo=='L') {
---
>     else if (tipo=='V') {
347,353c295
< 		if (tipo=='V')
< 			Yn[netlist[i].x][nv+1]-=netlist[i].valor;
< 		else{
< 			g=netlist[i].valor/deltaT;
< 			Yn[netlist[i].x][netlist[i].x]+=g;
< 			Yn[netlist[i].x][nv+1]+=g*netlist[i].previousVC;	/*verificar*/
< 		}
---
>       Yn[netlist[i].x][nv+1]-=netlist[i].valor;
420,423c362
< 	if (needBE)
< 		printf("\nSolucao(#%i):\n", ++iTemp);
< 	else
< 		printf("\nSolucao:\n");
---
>   printf("Solucao:\n");
430,452d368
< 	if (needBE)
< 		if (iTemp<NUMINTER){
< 			listCell *cur;
< 			cur=first;
< 			while (cur){
< 				if (netlist[(*cur).elNE].nome[0]=='C')
< 					netlist[(*cur).elNE].previousVC=Yn[netlist[(*cur).elNE].a][nv+1]-Yn[netlist[(*cur).elNE].b][nv+1];
< 				else
< 					netlist[(*cur).elNE].previousVC=Yn[netlist[(*cur).elNE].x][nv+1];
< 				cur=(*cur).next;
< 			}
< 			goto buildSys;
< 		}
< 		else
< 		{
< 			listCell *cur,*aux;
< 			cur=first;
< 			while(cur){
< 				aux=(*cur).next;
< 				free(cur);
< 				cur=aux;
< 			}
< 		}
454a371
> 
